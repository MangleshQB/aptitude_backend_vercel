"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
env = environ.Env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-sez6^oh3jtb9kq)a4zy@b#sl2ubumwh$5g(^y*9l^2z^7yobb!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = [
#                  '192.168.1.106',
#                  '192.168.1.202',
#                  '192.168.1.74',
#                  '192.168.1.23',
#                  '192.168.1.71',
#                  '192.168.1.101',
#                  ]

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'aptitude_test',
    'rest_framework',
    'drf_yasg',
    "corsheaders",
    'multiselectfield',
    'django_filters',
    'courses',
    'hrms',
    'configuration',
    'tracking',
    'payroll',
    'rest_framework.authtoken',
    'import_export',
    'django_celery_results'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    # 'main.middleware.RestrictIPMiddleware',
]

ROOT_URLCONF = 'main.urls'

CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', 'http://192.168.1.106:3000']

CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_ALLOW_ALL = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'

JWT_CONF = {
    "TOKEN_LIFETIME": timedelta(days=10),
    # "TOKEN_LIFETIME": timedelta(minutes=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=30),
    "FORGOT_PASSWORD_LIFETIME": timedelta(minutes=15),
    "ALGORITHM": "HS256",
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'app.management.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ],
    'EXCEPTION_HANDLER': 'utils.common.custom_exception_handler'
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        "OPTIONS": {
            "timeout": 40,
        }
    },
    'crm': {
        'ENGINE': 'django.db.backends.mysql',
        'CONN_MAX_AGE': 0,
        'NAME': 'u635512256_qbcrm',
        'USER': 'u635512256_qbcrmuser',
        'PASSWORD': "LzfyPv@9",
        'HOST': '194.59.164.59',
        'PORT': 3306,
        'OPTIONS': {
            'sql_mode': 'traditional',
        }
    },
    'zkteco': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'etp_testing',
        'USER': 'user',
        'PASSWORD': 'root',
        'HOST': '192.168.1.202',
        'PORT': '3306',
    }
}

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql_psycopg2",
#         'NAME': "aptitude_test",
#         'USER': "postgres",
#         'PASSWORD': "root",
#         'HOST': "localhost",
#         'PORT': "5432"
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

AUTH_USER_MODEL = 'app.CustomUser'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

WKHTMLTOPDF_CMD_OPTIONS = {
    'enable-local-file-access': True,
}

WKHTMLTOPDF_PATH = env.str("WKHTMLTOPDF_PATH", "wkhtmltopdf.exe")

HR_EMAIL = env.str("HR_EMAIL", "umang@quantumbot.co.in")

# URL for accessing static files
STATIC_URL = '/static/'

# Directory for additional static files (like your root static folder)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Directory to collect all static files for production
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_URL = 'media/'
MEDIA_ROOT = 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MIGRATION_MODULES = {
    'app': f'app.migrations.{env.str("MODE")}',
    'aptitude_test': f'aptitude_test.migrations.{env.str("MODE")}',
    'courses': f'courses.migrations.{env.str("MODE")}',
    'configuration': f'configuration.migrations.{env.str("MODE")}',
    'tracking': f'tracking.migrations.{env.str("MODE")}',
    'hrms': f'hrms.migrations.{env.str("MODE")}',
    'payroll': f'payroll.migrations.{env.str("MODE")}',
}

# Celery
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'server@quantumbot.in'
EMAIL_HOST_PASSWORD = 'jmoj dgub mwxv dfct'

SURVEILLANCE_SKYPE_ID = env.str("SURVEILLANCE_SKYPE_ID")
QUANTUMBOT_SKYPE_ID = env.str("QUANTUMBOT_SKYPE_ID")
SKYPE_USERNAME = env.str("SKYPE_USERNAME")
SKYPE_PASSWORD = env.str("SKYPE_PASSWORD")

SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'utils.ReadWriteAutoSchema.ReadWriteAutoSchema',
    "SECURITY_DEFINITIONS": {
        "JWT [Bearer {JWT}]": {
            "name": "Authorization",
            "type": "apiKey",
            "in": "header",
        }
    },
    "USE_SESSION_AUTH": False,
}